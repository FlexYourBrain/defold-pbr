local C = require 'main/constants'
local dirtylarry = require "dirtylarry/dirtylarry"

function init(self)
	msg.post(".", "acquire_input_focus")
	local larry_radio = gui.get_node("template/larryradio")
	local larry_label = gui.get_node("template/larrylabel")

	self.debug_mode_wid = {}
	self.debug_mode = "NONE"
	
	for k,v in pairs(C.DEBUG_MODE) do
		self.debug_mode_wid[k] = {
			radio = gui.clone(larry_radio),
			label = gui.clone(larry_label),
		}
		gui.set_id(self.debug_mode_wid[k].radio, k .. "/larryradio")
		gui.set_id(self.debug_mode_wid[k].label, k .. "/larrylabel")
	end
end

function update(self, dt)
	local start_y = gui.get_height() - 48
	local start_x = 48
	local height = 48
	local i = 0
	
	for k,v in pairs(self.debug_mode_wid) do
		gui.set_position(v.radio, vmath.vector3(start_x, start_y - height * i, 0))
		gui.set_position(v.label, vmath.vector3(start_x + 24, start_y - height * i, 0))
		gui.set_scale(v.radio, vmath.vector3(0.5, 0.5, 1))
		gui.set_scale(v.label, vmath.vector3(0.5, 0.5, 1))
		gui.set_text(v.label, k)
		i = i + 1
	end
end

function on_input(self, action_id, action)
	local debug_mode = self.debug_mode
	for k,v in pairs(self.debug_mode_wid) do
		self.debug_mode = dirtylarry:radio(k, action_id, action, k, self.debug_mode)
	end

	if debug_mode ~= self.debug_mode then
		msg.post("@render:", "debug_mode", { self.debug_mode })
	end
end
