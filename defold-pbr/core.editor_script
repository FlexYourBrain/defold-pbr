local M = {}

local function ends_with(str, ending)
    return ending == "" or str:sub(-#ending) == ending
end

function starts_with(str, start)
    return string.sub(str,1,string.len(start)) == start
end

local function trim_leading_slash(str)
    if starts_with(str, "/") then
        return string.sub(str, 2)
    end
    return str
end

local function get_base_file_name(str)
    local last_slash = string.find(str, "/[^/]*$")
    return string.sub(str, last_slash + 1)
end

local function get_base_directory(str)
    local last_slash = string.find(str, "/[^/]*$")
    return trim_leading_slash(string.sub(str, 1, last_slash))
end

local function strip_ext(str)
    local last_ext = string.find(str, "[.][^.]*$")
    return string.sub(str, 1, last_ext-1)
end

local CMD_CREATE_ASSETS = {
    label     = "Defold PBR - Create Environment Assets",
    locations = {"Assets"},
    query     = {
        selection = {
            type        = "resource",
            cardinality = "one"
        }
    },
    active = function(opts)
        return ends_with(editor.get(opts.selection, "path"), ".hdr")
    end,
    run = function(opts)
        local input_path = trim_leading_slash(editor.get(opts.selection, "path"))
        local directory = get_base_directory(input_path) .. strip_ext(get_base_file_name(input_path))
        
        return {
            {
                action = "shell",
                command = { "mkdir", "-p", directory }
            },
            {
                action = "shell",
                command = {
                    "defold-pbr/tools/pbr-utils", input_path, directory,
                    "--generate", "irradiance",
                    "--generate", "prefilter",
                    "--meta-data", "--verbose"
                }
            }
        }
    end
}

function M.get_commands() 
    return { CMD_CREATE_ASSETS }
end

return M
